version: '3.8'

services:
  # SQL Server Database
  sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: ezticket-sqlserver
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=YourStrong@Passw0rd
      - MSSQL_PID=Express
    ports:
      - "1433:1433"
    volumes:
      - sqlserver_data:/var/opt/mssql
    networks:
      - ezticket-network
    healthcheck:
      test: ["CMD-SHELL", "/opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P YourStrong@Passw0rd -Q 'SELECT 1' || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5

  # .NET Core API Backend
  api:
    build:
      context: ./EZTicket.API
      dockerfile: Dockerfile
    container_name: ezticket-api
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://+:80
      - ConnectionStrings__DefaultConnection=Server=sqlserver,1433;Database=EZTicketDB;User Id=sa;Password=YourStrong@Passw0rd;TrustServerCertificate=true;MultipleActiveResultSets=true
      - JWT__Key=YourSuperSecretKeyThatIsAtLeast32CharactersLong!
      - JWT__Issuer=EZTicket
      - JWT__Audience=EZTicket
      - JWT__ExpiryInMinutes=60
    ports:
      - "5000:80"
    depends_on:
      sqlserver:
        condition: service_healthy
    networks:
      - ezticket-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Next.js Frontend
  frontend:
    build:
      context: ./ezticket
      dockerfile: Dockerfile
    container_name: ezticket-frontend
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=http://api:80
    ports:
      - "3000:3000"
    depends_on:
      - api
    networks:
      - ezticket-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx Reverse Proxy (Optional)
  nginx:
    image: nginx:alpine
    container_name: ezticket-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - frontend
      - api
    networks:
      - ezticket-network
    restart: unless-stopped

volumes:
  sqlserver_data:

networks:
  ezticket-network:
    driver: bridge
